<MainMenuScreen>:
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			orientation: 'vertical'
			Label:
				text: "Start a new game"
			Label:
				text: "A game of shooting friends with a sun between."
		BoxLayout:
			orientation: 'vertical'
			Button:
				text: "New game"
				on_release: root.new_game()
			Button:
				text: "Game Rules"
				on_release: app.open_settings()
			Button:
				text: "Ship select"

<GameScreen>:

<RulesScreen>:
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			Label:
				text: "Torpedo count"
			TextInput:
				text: str(root.torpedo_count)
			Button:
				text: "save"
				on_release: root.update_torpedo()
		Button:
			text: "Return"
			on_release: root.menu()

<VictoryScreen>:
	BoxLayout:
		orientation: 'vertical'
		UpsidedownButton:
			text: "Menu"
			on_release: root.menu()
		UpsidedownButton:
			text: "play again?"
			on_release: root.again()
		UpsidedownLabel:
			text: "Winner is: " + root.winner_color
		Label:
			text: "Winner is: " + root.winner_color
		Button:
			text: "play again?"
			on_release: root.again()
		Button:
			text: "Menu"
			on_release: root.menu()

<Duel>:
	GameField:
		id: gameField
		size_hint_y: 0.7
		center: root.center
	UpsideDownControlls:
		id: player1Controller
		size_hint_y: 0.15
		top: root.top
		y: root.y
		color: [1,0,0,1]
	UpsidedownLabel:
		id: player1Score
		y: root.top - (root.height*3/10)
		x: root.x
		text: "Test!"
		size: 100,100
	RightsideUpControlls:
		id: player2Controller
		size_hint_y: 0.15
		pos: root.pos
		color: [0.25,0.25,1,1]
	Label:
		id: player1Score
		y: root.top - (root.height*3/10)
		x: root.x
		size: 100,100
		text: "Test! 2"

<Sun>:
	canvas:
		Color:
			rgb: 1,1,0
		Ellipse:
			pos: self.center_x - 25,self.center_y - 25
			size: 50,50

<Vessel>:

<TrailDot>:
	canvas:
		Color:
			rgb: self.color
		Ellipse:
			pos: root.pos
			size: 3,3


<Ship>:
	canvas.before:
		PushMatrix
		Rotate:
			angle: root.angle
			axis: 0,0,1
			origin: root.center
	canvas:
		Color:
			rgb: self.color
		Line:
			points: self.center_x + 10, self.center_y, self.center_x - 10, self.center_y + 10, self.center_x - 10, self.center_y - 10, self.center_x + 10, self.center_y
			width: 3
	canvas.after:
		PopMatrix

<Torpedo>:
	canvas:
		Color:
			rgb: self.color
		Ellipse:
			pos: root.pos
			size: 7,7

<Debris>:
	canvas:
		Color:
			rgb: 1,1,1
		Ellipse:
			pos: root.pos
			size: 7,7

<UpsidedownButton@Button>:
	canvas.before:
		PushMatrix
		Rotate:
			angle: 180
			axis: 0,0,1
			origin: root.center
	canvas.after:
		PopMatrix

<UpsidedownLabel@Label>:
	canvas.before:
		PushMatrix
		Rotate:
			angle: 180
			axis: 0,0,1
			origin: root.center
	canvas.after:
		PopMatrix

<Controls>:

<UpsideDownControlls@Controls>:
	BoxLayout:
		orientation: 'vertical'
		UpsidedownButton: 
			text: "Reverse"
			on_press: root.reverse()
			on_release: root.reverse_release()
		UpsidedownButton: 
			text: "Forward"
			on_press: root.forward()
			on_release: root.forward_release()
	GridLayout:
		cols: 1
		BoxLayout:
			UpsidedownButton: 
				text: "Recall All"
				on_press: root.destroy()
			UpsidedownLabel:
				text: root.remaining_text
		UpsidedownButton: 
			text: "FIRE"
			on_press: root.fire()
	Controller:
		id: controller
	BoxLayout:
		orientation: 'vertical'
		UpsidedownLabel: 
			text: str(app.red_score)
		UpsidedownLabel: 
			text: "Score:"


<RightsideUpControlls@Controls>:
	BoxLayout:
		orientation: 'vertical'
		Label: 
			text: "Score:"
		Label: 
			text: str(app.blue_score)
	Controller:
		id: controller
	GridLayout:
		cols: 1
		Button: 
			text: "FIRE"
			on_press: root.fire()
		BoxLayout:
			Button: 
				text: "Recall All"
				on_press: root.destroy()
			Label:
				text: root.remaining_text
	BoxLayout:
		orientation: 'vertical'
		Button: 
			text: "Forward"
			on_press: root.forward()
			on_release: root.forward_release()
		Button: 
			text: "Reverse"
			on_press: root.reverse()
			on_release: root.reverse_release()
			

<Controller>:
